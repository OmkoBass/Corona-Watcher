{"ast":null,"code":"import _toConsumableArray from\"/home/omer/Git/Corona-Watcher/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/omer/Git/Corona-Watcher/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useRef}from'react';//axios\nimport axios from'axios';//Components\nimport Stats from\"./Stats\";import Spinner from\"react-bootstrap/Spinner\";import Form from\"react-bootstrap/Form\";import Container from\"react-bootstrap/Container\";function Countires(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),done=_useState2[0],setDone=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),data=_useState4[0],setData=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),all=_useState6[0],setAll=_useState6[1];var zip=function zip(arr){for(var _len=arguments.length,arrs=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){arrs[_key-1]=arguments[_key];}return arr.map(function(val,i){return arrs.reduce(function(a,arr){return[].concat(_toConsumableArray(a),[arr[i]]);},[val]);});};useEffect(function(){axios.get('https://coronavirus-tracker-api.herokuapp.com/all').then(function(response){var countries=zip(response.data.confirmed.locations,response.data.deaths.locations,response.data.recovered.locations);var counter=-1;var country=countries.map(function(country){counter++;return React.createElement(Stats,{country:country,key:counter});});setAll(country);setData(country);setDone(true);});},[]);var search=useRef(null);function handleSearch(){var searched=all.filter(function(country){return country.props.country[0].country.includes(search.current.value);});setData(searched);}return React.createElement(\"div\",null,done?React.createElement(\"div\",null,React.createElement(Container,null,React.createElement(\"div\",{className:\"stats-control\"},React.createElement(Form.Label,null,\"Search your country:\"),React.createElement(Form.Control,{ref:search,onChange:handleSearch,placeholder:\"Search countries...\"}))),data):React.createElement(\"div\",{className:\"loading\"},React.createElement(Spinner,{animation:\"border\",role:\"status\"},React.createElement(\"span\",{className:\"sr-only\"},\"Loading...\"))));}export default Countires;","map":{"version":3,"sources":["/home/omer/Git/Corona-Watcher/src/Components/Countries.js"],"names":["React","useEffect","useState","useRef","axios","Stats","Spinner","Form","Container","Countires","done","setDone","data","setData","all","setAll","zip","arr","arrs","map","val","i","reduce","a","get","then","response","countries","confirmed","locations","deaths","recovered","counter","country","search","handleSearch","searched","filter","props","includes","current","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\n\n//axios\nimport axios from 'axios';\n\n//Components\nimport Stats from \"./Stats\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\n\nfunction Countires() {\n    const [done, setDone] = useState(false);\n\n    const [data, setData] = useState(null);\n\n    const [all, setAll] = useState(null);\n\n    const zip = (arr, ...arrs) => {\n        return arr.map((val, i) => arrs.reduce((a, arr) => [...a, arr[i]], [val]));\n    }\n\n    useEffect(() => {\n        axios.get('https://coronavirus-tracker-api.herokuapp.com/all')\n            .then(response => {\n\n                const countries = zip(response.data.confirmed.locations,\n                    response.data.deaths.locations,\n                    response.data.recovered.locations)\n\n                let counter = -1;\n\n                const country = countries.map(country => {\n\n                    counter++;\n\n                    return <Stats country={country} key={counter}/>\n                })\n\n                setAll(country);\n                setData(country);\n                setDone(true);\n            })\n\n    }, []);\n\n    const search = useRef(null);\n\n    function handleSearch() {\n        const searched = all.filter(country =>\n            country.props.country[0].country.includes(search.current.value))\n\n        setData(searched);\n    }\n\n    return (\n        <div>\n            {done\n            ?\n                <div>\n                    <Container>\n                        <div className='stats-control'>\n                            <Form.Label >Search your country:</Form.Label>\n                            <Form.Control ref={search} onChange={handleSearch} placeholder='Search countries...'/>\n                        </div>\n                    </Container>\n                    {data}\n                </div>\n            :\n            <div className='loading'>\n                <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n            </div>}\n        </div>\n    )\n}\n\nexport default Countires\n"]},"metadata":{},"sourceType":"module"}