{"ast":null,"code":"var _jsxFileName = \"/home/omer/Git/Corona-Watcher/src/Components/CoronaNumbersChart.js\";\nimport React, { useState, useEffect } from 'react'; //axios\n\nimport axios from 'axios'; //Char.js\n\nimport { Line } from \"react-chartjs-2\";\nimport Loader from \"./Loader\";\n\nfunction CoronaNumbersChart() {\n  const [done, setDone] = useState(false);\n  const [date, setDate] = useState(null);\n  const [sick, setSick] = useState(null);\n  const [dead, setDead] = useState(null);\n  const [recovered, setRecovered] = useState(null);\n  useEffect(() => {\n    axios.get('https://coronavirus-tracker-api.herokuapp.com/all').then(response => {\n      setDate(response.data.confirmed.location.map(country => country.history));\n      setSick(response.data.confirmed.locations.map(country => country.latest));\n      setDead(response.data.deaths.locations.map(country => country.latest));\n      setRecovered(response.data.recovered.locations.map(country => country.latest));\n      setDone(true);\n    });\n  }, []);\n  console.log(sick);\n  console.log(dead);\n  console.log(recovered);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, done ? React.createElement(\"div\", {\n    className: \"charts-main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }) : React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n}\n\nexport default CoronaNumbersChart;","map":{"version":3,"sources":["/home/omer/Git/Corona-Watcher/src/Components/CoronaNumbersChart.js"],"names":["React","useState","useEffect","axios","Line","Loader","CoronaNumbersChart","done","setDone","date","setDate","sick","setSick","dead","setDead","recovered","setRecovered","get","then","response","data","confirmed","location","map","country","history","locations","latest","deaths","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,SAASC,kBAAT,GAA8B;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAACc,GAAN,CAAU,mDAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACdT,MAAAA,OAAO,CAACS,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,QAAxB,CAAiCC,GAAjC,CAAqCC,OAAO,IAAIA,OAAO,CAACC,OAAxD,CAAD,CAAP;AACAb,MAAAA,OAAO,CAACO,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBK,SAAxB,CAAkCH,GAAlC,CAAsCC,OAAO,IAAIA,OAAO,CAACG,MAAzD,CAAD,CAAP;AACAb,MAAAA,OAAO,CAACK,QAAQ,CAACC,IAAT,CAAcQ,MAAd,CAAqBF,SAArB,CAA+BH,GAA/B,CAAmCC,OAAO,IAAIA,OAAO,CAACG,MAAtD,CAAD,CAAP;AACAX,MAAAA,YAAY,CAACG,QAAQ,CAACC,IAAT,CAAcL,SAAd,CAAwBW,SAAxB,CAAkCH,GAAlC,CAAsCC,OAAO,IAAIA,OAAO,CAACG,MAAzD,CAAD,CAAZ;AAEAnB,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KARL;AAUH,GAXQ,EAWN,EAXM,CAAT;AAaAqB,EAAAA,OAAO,CAACC,GAAR,CAAYnB,IAAZ;AACAkB,EAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAYf,SAAZ;AAEA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,IAAI,GAED;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFC,GAQD,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATR,CADJ;AAcH;;AAED,eAAeD,kBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\n//axios\nimport axios from 'axios'\n\n//Char.js\nimport { Line } from \"react-chartjs-2\";\nimport Loader from \"./Loader\";\n\nfunction CoronaNumbersChart() {\n    const [done, setDone] = useState(false);\n\n    const [date, setDate] = useState(null);\n    const [sick, setSick] = useState(null)\n    const [dead, setDead] = useState(null)\n    const [recovered, setRecovered] = useState(null)\n\n    useEffect(() => {\n        axios.get('https://coronavirus-tracker-api.herokuapp.com/all')\n            .then(response => {\n                setDate(response.data.confirmed.location.map(country => country.history))\n                setSick(response.data.confirmed.locations.map(country => country.latest));\n                setDead(response.data.deaths.locations.map(country => country.latest));\n                setRecovered(response.data.recovered.locations.map(country => country.latest));\n\n                setDone(true);\n            })\n\n    }, []);\n\n    console.log(sick);\n    console.log(dead);\n    console.log(recovered);\n\n    return (\n        <React.Fragment>\n            {done\n                ?\n                <div className='charts-main'>\n                    {/*<Line data={sick} options={{responsive: true}}/>\n                    <Line data={dead} options={{responsive: true}}/>\n                    <Line data={recovered} options={{responsive: true}}/>*/}\n                </div>\n                :\n                <Loader/>\n            }\n        </React.Fragment>\n    )\n}\n\nexport default CoronaNumbersChart\n"]},"metadata":{},"sourceType":"module"}