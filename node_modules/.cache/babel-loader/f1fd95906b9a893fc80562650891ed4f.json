{"ast":null,"code":"var _jsxFileName = \"/home/omer/Git/Corona-Watcher/src/Components/Countries.js\";\nimport React, { useEffect, useState } from 'react'; //axios\n\nimport axios from 'axios'; //Components\n\nimport Stats from \"./Stats\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nfunction Countires() {\n  const [done, setDone] = useState(false);\n  const [data, setData] = useState(null);\n\n  const zip = (arr, ...arrs) => {\n    return arr.map((val, i) => arrs.reduce((a, arr) => [...a, arr[i]], [val]));\n  };\n\n  useEffect(() => {\n    axios.get('https://coronavirus-tracker-api.herokuapp.com/all').then(response => {\n      const countries = zip(response.data.confirmed.locations, response.data.deaths.locations, response.data.recovered.locations);\n      console.log(countries);\n      const shit = countries.map(country => React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, country.country));\n      setDone(true);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, done ? data : React.createElement(\"div\", {\n    className: \"loading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Loading...\"))));\n}\n\nexport default Countires;","map":{"version":3,"sources":["/home/omer/Git/Corona-Watcher/src/Components/Countries.js"],"names":["React","useEffect","useState","axios","Stats","Spinner","Countires","done","setDone","data","setData","zip","arr","arrs","map","val","i","reduce","a","get","then","response","countries","confirmed","locations","deaths","recovered","console","log","shit","country"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,SAASC,SAAT,GAAqB;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;;AAEA,QAAMS,GAAG,GAAG,CAACC,GAAD,EAAM,GAAGC,IAAT,KAAkB;AAC1B,WAAOD,GAAG,CAACE,GAAJ,CAAQ,CAACC,GAAD,EAAMC,CAAN,KAAYH,IAAI,CAACI,MAAL,CAAY,CAACC,CAAD,EAAIN,GAAJ,KAAY,CAAC,GAAGM,CAAJ,EAAON,GAAG,CAACI,CAAD,CAAV,CAAxB,EAAwC,CAACD,GAAD,CAAxC,CAApB,CAAP;AACH,GAFD;;AAIAd,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACgB,GAAN,CAAU,mDAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AAEd,YAAMC,SAAS,GAAGX,GAAG,CAACU,QAAQ,CAACZ,IAAT,CAAcc,SAAd,CAAwBC,SAAzB,EACjBH,QAAQ,CAACZ,IAAT,CAAcgB,MAAd,CAAqBD,SADJ,EAEjBH,QAAQ,CAACZ,IAAT,CAAciB,SAAd,CAAwBF,SAFP,CAArB;AAIAG,MAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AAEA,YAAMO,IAAI,GAAGP,SAAS,CAACR,GAAV,CAAcgB,OAAO,IAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,OAAO,CAACA,OAAZ,CADa,CAAb;AAGAtB,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KAbL;AAeH,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,IAAI,GAELE,IAFK,GAIL;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,CALJ,CADJ;AAaH;;AAED,eAAeH,SAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\n\n//axios\nimport axios from 'axios';\n\n//Components\nimport Stats from \"./Stats\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nfunction Countires() {\n    const [done, setDone] = useState(false);\n\n    const [data, setData] = useState(null);\n\n    const zip = (arr, ...arrs) => {\n        return arr.map((val, i) => arrs.reduce((a, arr) => [...a, arr[i]], [val]));\n    }\n\n    useEffect(() => {\n        axios.get('https://coronavirus-tracker-api.herokuapp.com/all')\n            .then(response => {\n\n                const countries = zip(response.data.confirmed.locations,\n                    response.data.deaths.locations,\n                    response.data.recovered.locations)\n\n                console.log(countries);\n\n                const shit = countries.map(country =>\n                <p>{country.country}</p>)\n\n                setDone(true);\n            })\n\n    }, []);\n\n    return (\n        <div>\n            {done\n            ?\n            data\n            :\n            <div className='loading'>\n                <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n            </div>}\n        </div>\n    )\n}\n\nexport default Countires\n"]},"metadata":{},"sourceType":"module"}