{"ast":null,"code":"var _jsxFileName = \"/home/omer/Git/Corona-Watcher/src/Components/Countries.js\";\nimport React, { useEffect, useState, useRef } from 'react'; //axios\n\nimport axios from 'axios'; //Components\n\nimport Stats from \"./Stats\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\n\nfunction Countires() {\n  const [done, setDone] = useState(false);\n  const [data, setData] = useState(null);\n  const [all, setAll] = useState(null);\n\n  const zip = (arr, ...arrs) => {\n    return arr.map((val, i) => arrs.reduce((a, arr) => [...a, arr[i]], [val]));\n  };\n\n  useEffect(() => {\n    axios.get('https://coronavirus-tracker-api.herokuapp.com/all').then(response => {\n      const countries = zip(response.data.confirmed.locations, response.data.deaths.locations, response.data.recovered.locations);\n      console.log(response.data.confirmed.locations);\n      let counter = -1;\n      const country = countries.map(country => {\n        counter++;\n        return React.createElement(Stats, {\n          country: country,\n          key: counter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n      });\n      setAll(country);\n      setData(country);\n      setDone(true);\n    });\n  }, []);\n  const search = useRef(null);\n\n  function handleSearch() {\n    axios.get('https://coronavirus-tracker-api.herokuapp.com/all').then(response => {\n      console.log(response.data.confirmed.locations.map(country => country));\n    });\n    /*if(search.current.value === '')\n        setData(all);\n    else {\n        const searched = data.filter(country =>\n            country.props.country[0].country.includes(search.current.value))\n         setData(searched);\n    }*/\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, done ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"stats-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Search your country:\"), React.createElement(Form.Control, {\n    ref: search,\n    onChange: handleSearch,\n    placeholder: \"Search countries...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))), data) : React.createElement(\"div\", {\n    className: \"loading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Loading...\"))));\n}\n\nexport default Countires;","map":{"version":3,"sources":["/home/omer/Git/Corona-Watcher/src/Components/Countries.js"],"names":["React","useEffect","useState","useRef","axios","Stats","Spinner","Form","Container","Countires","done","setDone","data","setData","all","setAll","zip","arr","arrs","map","val","i","reduce","a","get","then","response","countries","confirmed","locations","deaths","recovered","console","log","counter","country","search","handleSearch"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\n\n//axios\nimport axios from 'axios';\n\n//Components\nimport Stats from \"./Stats\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\n\nfunction Countires() {\n    const [done, setDone] = useState(false);\n\n    const [data, setData] = useState(null);\n\n    const [all, setAll] = useState(null);\n\n    const zip = (arr, ...arrs) => {\n        return arr.map((val, i) => arrs.reduce((a, arr) => [...a, arr[i]], [val]));\n    }\n\n    useEffect(() => {\n        axios.get('https://coronavirus-tracker-api.herokuapp.com/all')\n            .then(response => {\n\n                const countries = zip(response.data.confirmed.locations,\n                    response.data.deaths.locations,\n                    response.data.recovered.locations)\n\n\n                console.log(response.data.confirmed.locations);\n                let counter = -1;\n\n                const country = countries.map(country => {\n\n                    counter++;\n\n                    return <Stats country={country} key={counter}/>\n                })\n\n                setAll(country);\n                setData(country)\n                setDone(true);\n            })\n\n    }, []);\n\n    const search = useRef(null);\n\n    function handleSearch() {\n        axios.get('https://coronavirus-tracker-api.herokuapp.com/all')\n            .then(response => {\n                console.log(response.data.confirmed.locations.map(country =>\n                country));\n\n            });\n\n        /*if(search.current.value === '')\n            setData(all);\n        else {\n            const searched = data.filter(country =>\n                country.props.country[0].country.includes(search.current.value))\n\n            setData(searched);\n        }*/\n    }\n\n    return (\n        <div>\n            {done\n            ?\n                <div>\n                    <Container>\n                        <div className='stats-control'>\n                            <Form.Label >Search your country:</Form.Label>\n                            <Form.Control ref={search} onChange={handleSearch} placeholder='Search countries...'/>\n                        </div>\n                    </Container>\n                    {data}\n                </div>\n            :\n            <div className='loading'>\n                <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n            </div>}\n        </div>\n    )\n}\n\nexport default Countires\n"]},"metadata":{},"sourceType":"module"}