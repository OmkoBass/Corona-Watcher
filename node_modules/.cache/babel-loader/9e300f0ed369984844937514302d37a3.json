{"ast":null,"code":"var _jsxFileName = \"/home/omer/Git/Corona-Watcher/src/Components/Countries.js\";\nimport React, { useEffect, useState, useRef } from 'react'; //axios\n\nimport axios from 'axios'; //Components\n\nimport Stats from \"./Stats\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\n\nfunction Countires() {\n  const [done, setDone] = useState(false);\n  const [data, setData] = useState(null);\n\n  const zip = (arr, ...arrs) => {\n    return arr.map((val, i) => arrs.reduce((a, arr) => [...a, arr[i]], [val]));\n  };\n\n  useEffect(() => {\n    axios.get('https://coronavirus-tracker-api.herokuapp.com/all').then(response => {\n      const countries = zip(response.data.confirmed.locations, response.data.deaths.locations, response.data.recovered.locations);\n      let counter = -1;\n      const country = countries.map(country => {\n        counter++;\n        return React.createElement(Stats, {\n          country: country,\n          key: counter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        });\n      });\n      setData(country);\n      setDone(true);\n    });\n  }, []);\n  const searched = useRef(null);\n\n  function handleSearch() {\n    for (let i = 0; i < 347; i++) {\n      if (data.props.country[0].country.includes(searched.current.value)) {}\n    }\n\n    const temp = data.find(country => {\n      return country.props.country[0].country.includes(searched.current.value);\n    });\n    setData(temp);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, done ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"stats-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Search your country:\"), React.createElement(Form.Control, {\n    ref: searched,\n    onChange: handleSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))), data) : React.createElement(\"div\", {\n    className: \"loading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Loading...\"))));\n}\n\nexport default Countires;","map":{"version":3,"sources":["/home/omer/Git/Corona-Watcher/src/Components/Countries.js"],"names":["React","useEffect","useState","useRef","axios","Stats","Spinner","Form","Container","Countires","done","setDone","data","setData","zip","arr","arrs","map","val","i","reduce","a","get","then","response","countries","confirmed","locations","deaths","recovered","counter","country","searched","handleSearch","props","includes","current","value","temp","find"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\n\n//axios\nimport axios from 'axios';\n\n//Components\nimport Stats from \"./Stats\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\n\nfunction Countires() {\n    const [done, setDone] = useState(false);\n\n    const [data, setData] = useState(null);\n\n    const zip = (arr, ...arrs) => {\n        return arr.map((val, i) => arrs.reduce((a, arr) => [...a, arr[i]], [val]));\n    }\n\n    useEffect(() => {\n        axios.get('https://coronavirus-tracker-api.herokuapp.com/all')\n            .then(response => {\n\n                const countries = zip(response.data.confirmed.locations,\n                    response.data.deaths.locations,\n                    response.data.recovered.locations)\n\n                let counter = -1;\n\n                const country = countries.map(country => {\n\n                    counter++;\n\n                    return <Stats country={country} key={counter}/>\n                })\n\n                setData(country)\n                setDone(true);\n            })\n\n    }, []);\n\n    const searched = useRef(null);\n\n    function handleSearch() {\n        for(let i = 0; i < 347; i++) {\n            if(data.props.country[0].country.includes(searched.current.value)) {\n\n            }\n        }\n\n        const temp = data.find(country => {\n            return country.props.country[0].country.includes(searched.current.value)\n        })\n\n        setData(temp);\n    }\n\n    return (\n        <div>\n            {done\n            ?\n                <div>\n                    <Container>\n                        <div className='stats-control'>\n                            <Form.Label>Search your country:</Form.Label>\n                            <Form.Control ref={searched} onChange={handleSearch}/>\n                        </div>\n                    </Container>\n                    {data}\n                </div>\n            :\n            <div className='loading'>\n                <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n            </div>}\n        </div>\n    )\n}\n\nexport default Countires\n"]},"metadata":{},"sourceType":"module"}