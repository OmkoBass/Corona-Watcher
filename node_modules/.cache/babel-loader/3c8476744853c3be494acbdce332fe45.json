{"ast":null,"code":"var _jsxFileName = \"/home/omer/Git/Corona-Watcher/src/Components/Chart.js\";\nimport React from 'react'; //Chart.js\n\nimport { Line } from \"react-chartjs-2\";\n\nfunction Chart(props) {\n  //Dates weren't sorted so i needed to sort the dates\n  //And preserve the value order for those dates\n  let dates = [];\n\n  for (let date in props.datesConfirmed) {\n    dates.push([date, props.datesConfirmed[date]]);\n  }\n\n  dates.sort(function (a, b) {\n    return a[1] - b[1];\n  });\n  const datesSorted = dates.map(date => date[0]);\n  const values = dates.map(value => value[1]);\n  const data = {\n    labels: datesSorted,\n    datasets: [{\n      label: 'Sick',\n      backgroundColor: '#cccccc',\n      //Lighter\n      borderColor: '#bfbfbf',\n      //Darker\n      data: values\n    }, {\n      label: 'Dead',\n      backgroundColor: '#ff6666',\n      borderColor: '#ff4d4d',\n      data: props.datesDead\n    }, {\n      label: 'Recovered',\n      backgroundColor: '#85e085',\n      borderColor: '#70db70',\n      data: props.datesRecovered\n    }]\n  };\n\n  function handleBack() {\n    props.goBack();\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, props.name[0]), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, props.name[1]), React.createElement(Line, {\n    data: data,\n    options: {\n      responsive: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"less-info\",\n    onClick: handleBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Less info\")));\n}\n\nexport default Chart;","map":{"version":3,"sources":["/home/omer/Git/Corona-Watcher/src/Components/Chart.js"],"names":["React","Line","Chart","props","dates","date","datesConfirmed","push","sort","a","b","datesSorted","map","values","value","data","labels","datasets","label","backgroundColor","borderColor","datesDead","datesRecovered","handleBack","goBack","name","responsive"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB;AACA;AACA,MAAIC,KAAK,GAAG,EAAZ;;AAEA,OAAK,IAAIC,IAAT,IAAiBF,KAAK,CAACG,cAAvB,EAAuC;AACnCF,IAAAA,KAAK,CAACG,IAAN,CAAW,CAACF,IAAD,EAAOF,KAAK,CAACG,cAAN,CAAqBD,IAArB,CAAP,CAAX;AACH;;AACDD,EAAAA,KAAK,CAACI,IAAN,CAAW,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACtB,WAAOD,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAf;AACH,GAFD;AAIA,QAAMC,WAAW,GAAGP,KAAK,CAACQ,GAAN,CAAUP,IAAI,IAAIA,IAAI,CAAC,CAAD,CAAtB,CAApB;AACA,QAAMQ,MAAM,GAAGT,KAAK,CAACQ,GAAN,CAAUE,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAxB,CAAf;AAEA,QAAMC,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAEL,WADC;AAETM,IAAAA,QAAQ,EAAE,CACF;AACIC,MAAAA,KAAK,EAAE,MADX;AAEIC,MAAAA,eAAe,EAAE,SAFrB;AAEgC;AAC5BC,MAAAA,WAAW,EAAE,SAHjB;AAG4B;AACxBL,MAAAA,IAAI,EAAEF;AAJV,KADE,EAOF;AACIK,MAAAA,KAAK,EAAE,MADX;AAEIC,MAAAA,eAAe,EAAE,SAFrB;AAGIC,MAAAA,WAAW,EAAE,SAHjB;AAIIL,MAAAA,IAAI,EAAEZ,KAAK,CAACkB;AAJhB,KAPE,EAaF;AACIH,MAAAA,KAAK,EAAE,WADX;AAEIC,MAAAA,eAAe,EAAE,SAFrB;AAGIC,MAAAA,WAAW,EAAE,SAHjB;AAIIL,MAAAA,IAAI,EAAEZ,KAAK,CAACmB;AAJhB,KAbE;AAFD,GAAb;;AAwBA,WAASC,UAAT,GAAsB;AAClBpB,IAAAA,KAAK,CAACqB,MAAN;AACH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKrB,KAAK,CAACsB,IAAN,CAAW,CAAX,CAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKtB,KAAK,CAACsB,IAAN,CAAW,CAAX,CAAL,CAFJ,EAGI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEV,IAAZ;AAAkB,IAAA,OAAO,EAAE;AAACW,MAAAA,UAAU,EAAE;AAAb,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAEH,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CAJJ,CADJ;AAUH;;AAED,eAAerB,KAAf","sourcesContent":["import React from 'react'\n\n//Chart.js\nimport { Line } from \"react-chartjs-2\";\n\nfunction Chart(props) {\n    //Dates weren't sorted so i needed to sort the dates\n    //And preserve the value order for those dates\n    let dates = [];\n\n    for (let date in props.datesConfirmed) {\n        dates.push([date, props.datesConfirmed[date]]);\n    }\n    dates.sort(function(a, b) {\n        return a[1] - b[1];\n    })\n\n    const datesSorted = dates.map(date => date[0]);\n    const values = dates.map(value => value[1]);\n\n    const data = {\n        labels: datesSorted,\n        datasets: [\n                {\n                    label: 'Sick',\n                    backgroundColor: '#cccccc', //Lighter\n                    borderColor: '#bfbfbf', //Darker\n                    data: values\n                },\n                {\n                    label: 'Dead',\n                    backgroundColor: '#ff6666',\n                    borderColor: '#ff4d4d',\n                    data: props.datesDead,\n                },\n                {\n                    label: 'Recovered',\n                    backgroundColor: '#85e085',\n                    borderColor: '#70db70',\n                    data: props.datesRecovered,\n                }\n            ]\n    }\n\n    function handleBack() {\n        props.goBack();\n    }\n\n    return (\n        <div>\n            <h2>{props.name[0]}</h2>\n            <h4>{props.name[1]}</h4>\n            <Line data={data} options={{responsive: true}}/>\n            <div className='less-info' onClick={handleBack}>\n                <h4>Less info</h4>\n            </div>\n        </div>\n    )\n}\n\nexport default Chart\n"]},"metadata":{},"sourceType":"module"}