{"ast":null,"code":"var _jsxFileName = \"/home/omer/Git/Corona-Watcher/src/Components/Countries.js\";\nimport React, { useEffect, useState, useRef } from 'react'; //axios\n\nimport axios from 'axios'; //Components\n\nimport Stats from \"./Stats\";\nimport Loader from \"./Loader\"; //Bootstrap\n\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\n\nfunction Countries() {\n  const [done, setDone] = useState(false);\n  const [data, setData] = useState(null);\n  const [all, setAll] = useState(null);\n\n  const zip = (arr, ...arrs) => {\n    return arr.map((val, i) => arrs.reduce((a, arr) => [...a, arr[i]], [val]));\n  };\n\n  useEffect(() => {\n    axios.get('https://coronavirus-tracker-api.herokuapp.com/all').then(response => {\n      const countries = zip(response.data.confirmed.locations, response.data.deaths.locations, response.data.recovered.locations);\n      let counter = -1;\n      const country = countries.map(country => {\n        counter++;\n        return React.createElement(Stats, {\n          country: country,\n          key: counter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n      });\n      setAll(country);\n      setData(country);\n      setDone(true);\n    });\n  }, []);\n  const search = useRef(null);\n\n  function handleSearch() {\n    const searched = all.filter(country => country.props.country[0].country.includes(search.current.value));\n    setData(searched);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, done ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"stats-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Search countires:\"), React.createElement(Form.Control, {\n    ref: search,\n    onChange: handleSearch,\n    placeholder: \"Search countries...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }))), data) : React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }));\n}\n\nexport default Countries;","map":{"version":3,"sources":["/home/omer/Git/Corona-Watcher/src/Components/Countries.js"],"names":["React","useEffect","useState","useRef","axios","Stats","Loader","Form","Container","Countries","done","setDone","data","setData","all","setAll","zip","arr","arrs","map","val","i","reduce","a","get","then","response","countries","confirmed","locations","deaths","recovered","counter","country","search","handleSearch","searched","filter","props","includes","current","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\n\n//axios\nimport axios from 'axios';\n\n//Components\nimport Stats from \"./Stats\";\nimport Loader from \"./Loader\";\n\n//Bootstrap\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\n\nfunction Countries() {\n    const [done, setDone] = useState(false);\n\n    const [data, setData] = useState(null);\n\n    const [all, setAll] = useState(null);\n\n    const zip = (arr, ...arrs) => {\n        return arr.map((val, i) => arrs.reduce((a, arr) => [...a, arr[i]], [val]));\n    }\n\n    useEffect(() => {\n        axios.get('https://coronavirus-tracker-api.herokuapp.com/all')\n            .then(response => {\n\n                const countries = zip(response.data.confirmed.locations,\n                    response.data.deaths.locations,\n                    response.data.recovered.locations)\n\n                let counter = -1;\n\n                const country = countries.map(country => {\n\n                    counter++;\n\n                    return <Stats country={country} key={counter}/>\n                })\n\n                setAll(country);\n                setData(country);\n                setDone(true);\n            })\n\n    }, []);\n\n    const search = useRef(null);\n\n    function handleSearch() {\n        const searched = all.filter(country =>\n            country.props.country[0].country.includes(search.current.value))\n\n        setData(searched);\n    }\n\n    return (\n        <div>\n            {done\n            ?\n                <div>\n                    <Container>\n                        <div className='stats-control'>\n                            <Form.Label >Search countires:</Form.Label>\n                            <Form.Control ref={search} onChange={handleSearch} placeholder='Search countries...'/>\n                        </div>\n                    </Container>\n                    {data}\n                </div>\n            :\n            <Loader/>\n            }\n        </div>\n    )\n}\n\nexport default Countries\n"]},"metadata":{},"sourceType":"module"}