{"ast":null,"code":"var _jsxFileName = \"/home/omer/Git/Corona-Watcher/src/Components/Chart.js\";\nimport React from 'react';\nimport { Line } from \"react-chartjs-2\";\n\nfunction Chart(props) {\n  const sickData = props.countryInfo.country[0].history;\n  const deadData = props.countryInfo.country[1].history;\n  const recoveredData = props.countryInfo.country[2].history;\n  console.log(JSON.stringify(Object.keys(sickData)).sort(function (a, b) {\n    a = a.split('/').reverse().join('');\n    b = b.split('/').reverse().join('');\n    return a > b ? 1 : a < b ? -1 : 0;\n  }));\n  const data = {\n    labels: Object.keys(sickData),\n    datasets: [{\n      label: 'Sick',\n      backgroundColor: '#cccccc',\n      //Lighter\n      borderColor: '#bfbfbf',\n      //Darker\n      data: Object.values(sickData)\n    }, {\n      label: 'Dead',\n      backgroundColor: '#ff6666',\n      borderColor: '#ff4d4d',\n      data: Object.values(deadData)\n    }, {\n      label: 'Recovered',\n      backgroundColor: '#85e085',\n      borderColor: '#70db70',\n      data: Object.values(recoveredData)\n    }]\n  };\n\n  function handleBack() {\n    props.goBack();\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, props.countryInfo.country[0].country), React.createElement(Line, {\n    data: data,\n    options: {\n      responsive: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"less-info\",\n    onClick: handleBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Less info\")));\n}\n\nexport default Chart;","map":{"version":3,"sources":["/home/omer/Git/Corona-Watcher/src/Components/Chart.js"],"names":["React","Line","Chart","props","sickData","countryInfo","country","history","deadData","recoveredData","console","log","JSON","stringify","Object","keys","sort","a","b","split","reverse","join","data","labels","datasets","label","backgroundColor","borderColor","values","handleBack","goBack","responsive"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,QAAMC,QAAQ,GAAGD,KAAK,CAACE,WAAN,CAAkBC,OAAlB,CAA0B,CAA1B,EAA6BC,OAA9C;AACA,QAAMC,QAAQ,GAAGL,KAAK,CAACE,WAAN,CAAkBC,OAAlB,CAA0B,CAA1B,EAA6BC,OAA9C;AACA,QAAME,aAAa,GAAGN,KAAK,CAACE,WAAN,CAAkBC,OAAlB,CAA0B,CAA1B,EAA6BC,OAAnD;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeC,MAAM,CAACC,IAAP,CAAYX,QAAZ,CAAf,EAAsCY,IAAtC,CACR,UAASC,CAAT,EAAWC,CAAX,EAAc;AACVD,IAAAA,CAAC,GAAGA,CAAC,CAACE,KAAF,CAAQ,GAAR,EAAaC,OAAb,GAAuBC,IAAvB,CAA4B,EAA5B,CAAJ;AACAH,IAAAA,CAAC,GAAGA,CAAC,CAACC,KAAF,CAAQ,GAAR,EAAaC,OAAb,GAAuBC,IAAvB,CAA4B,EAA5B,CAAJ;AACA,WAAOJ,CAAC,GAAGC,CAAJ,GAAQ,CAAR,GAAYD,CAAC,GAAGC,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAAhC;AACH,GALO,CAAZ;AAQA,QAAMI,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAET,MAAM,CAACC,IAAP,CAAYX,QAAZ,CADC;AAEToB,IAAAA,QAAQ,EAAE,CACF;AACIC,MAAAA,KAAK,EAAE,MADX;AAEIC,MAAAA,eAAe,EAAE,SAFrB;AAEgC;AAC5BC,MAAAA,WAAW,EAAE,SAHjB;AAG4B;AACxBL,MAAAA,IAAI,EAAER,MAAM,CAACc,MAAP,CAAcxB,QAAd;AAJV,KADE,EAOF;AACIqB,MAAAA,KAAK,EAAE,MADX;AAEIC,MAAAA,eAAe,EAAE,SAFrB;AAGIC,MAAAA,WAAW,EAAE,SAHjB;AAIIL,MAAAA,IAAI,EAAER,MAAM,CAACc,MAAP,CAAcpB,QAAd;AAJV,KAPE,EAaF;AACIiB,MAAAA,KAAK,EAAE,WADX;AAEIC,MAAAA,eAAe,EAAE,SAFrB;AAGIC,MAAAA,WAAW,EAAE,SAHjB;AAIIL,MAAAA,IAAI,EAAER,MAAM,CAACc,MAAP,CAAcnB,aAAd;AAJV,KAbE;AAFD,GAAb;;AAwBA,WAASoB,UAAT,GAAsB;AAClB1B,IAAAA,KAAK,CAAC2B,MAAN;AACH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK3B,KAAK,CAACE,WAAN,CAAkBC,OAAlB,CAA0B,CAA1B,EAA6BA,OAAlC,CADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEgB,IAAZ;AAAkB,IAAA,OAAO,EAAE;AAACS,MAAAA,UAAU,EAAE;AAAb,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAEF,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CAHJ,CADJ;AASH;;AAED,eAAe3B,KAAf","sourcesContent":["import React from 'react'\nimport { Line } from \"react-chartjs-2\";\n\nfunction Chart(props) {\n    const sickData = props.countryInfo.country[0].history;\n    const deadData = props.countryInfo.country[1].history;\n    const recoveredData = props.countryInfo.country[2].history;\n\n    console.log(JSON.stringify(Object.keys(sickData)).sort(\n        function(a,b) {\n            a = a.split('/').reverse().join('');\n            b = b.split('/').reverse().join('');\n            return a > b ? 1 : a < b ? -1 : 0;\n        }\n    ))\n\n    const data = {\n        labels: Object.keys(sickData),\n        datasets: [\n                {\n                    label: 'Sick',\n                    backgroundColor: '#cccccc', //Lighter\n                    borderColor: '#bfbfbf', //Darker\n                    data: Object.values(sickData)\n                },\n                {\n                    label: 'Dead',\n                    backgroundColor: '#ff6666',\n                    borderColor: '#ff4d4d',\n                    data: Object.values(deadData),\n                },\n                {\n                    label: 'Recovered',\n                    backgroundColor: '#85e085',\n                    borderColor: '#70db70',\n                    data: Object.values(recoveredData),\n                }\n            ]\n    }\n\n    function handleBack() {\n        props.goBack();\n    }\n\n    return (\n        <div>\n            <h2>{props.countryInfo.country[0].country}</h2>\n            <Line data={data} options={{responsive: true}}/>\n            <div className='less-info' onClick={handleBack}>\n                <h4>Less info</h4>\n            </div>\n        </div>\n    )\n}\n\nexport default Chart\n"]},"metadata":{},"sourceType":"module"}