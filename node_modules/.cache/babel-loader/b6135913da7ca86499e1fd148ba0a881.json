{"ast":null,"code":"var _jsxFileName = \"/home/omer/Git/Corona-Watcher/src/Components/Countries.js\";\nimport React, { useRef, useState, useEffect } from 'react'; //Components\n\nimport Stats from \"./Stats\"; //Bootstrap\n\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\n\nfunction Countries(props) {\n  const [stats, setStats] = useState(null);\n  const countryNames = props.confirmed.map(country => [country.country, country.province]);\n  const confirmed = props.confirmed.map(country => country.latest);\n  const dead = props.deaths.map(country => country.latest);\n  const recovered = props.recovered.map(country => country.latest);\n  const datesConfirmed = props.confirmed.map(country => country.history);\n  const datesDead = props.deaths.map(country => country.history);\n  const datesRecovered = props.recovered.map(country => country.history);\n\n  const zip = (arr, ...arrs) => {\n    return arr.map((val, i) => arrs.reduce((a, arr) => [...a, arr[i]], [val]));\n  };\n\n  const countries = zip(countryNames, confirmed, dead, recovered, datesConfirmed, datesDead, datesRecovered);\n  useEffect(() => {\n    let counter = -1;\n    const statsMapped = countries.map(country => {\n      counter++;\n      return React.createElement(Stats, {\n        key: counter,\n        name: country[0],\n        confirmed: country[1],\n        dead: country[2],\n        recovered: country[3],\n        datesConfirmed: country[4],\n        datesDead: Object.values(country[5]),\n        datesRecovered: Object.values(country[6]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    });\n    setStats(statsMapped);\n  }, [countries]);\n  const search = useRef(null);\n\n  function handleSearch() {}\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"stats-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Search countires:\"), React.createElement(Form.Control, {\n    ref: search,\n    onChange: handleSearch,\n    placeholder: \"Search countries...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))), stats);\n}\n\nexport default Countries;","map":{"version":3,"sources":["/home/omer/Git/Corona-Watcher/src/Components/Countries.js"],"names":["React","useRef","useState","useEffect","Stats","Form","Container","Countries","props","stats","setStats","countryNames","confirmed","map","country","province","latest","dead","deaths","recovered","datesConfirmed","history","datesDead","datesRecovered","zip","arr","arrs","val","i","reduce","a","countries","counter","statsMapped","Object","values","search","handleSearch"],"mappings":"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","sourcesContent":["import React, {useRef, useState, useEffect} from 'react'\n\n//Components\nimport Stats from \"./Stats\";\n\n//Bootstrap\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\n\nfunction Countries(props) {\n    const [stats, setStats] = useState(null);\n\n    const countryNames = props.confirmed.map(country => [country.country, country.province]);\n    const confirmed = props.confirmed.map(country => country.latest);\n    const dead = props.deaths.map(country => country.latest);\n    const recovered = props.recovered.map(country => country.latest);\n    const datesConfirmed = props.confirmed.map(country => country.history);\n    const datesDead = props.deaths.map(country => country.history);\n    const datesRecovered = props.recovered.map(country => country.history);\n\n    const zip = (arr, ...arrs) => {\n        return arr.map((val, i) => arrs.reduce((a, arr) => [...a, arr[i]], [val]));\n    }\n\n    const countries = zip(countryNames, confirmed, dead, recovered, datesConfirmed, datesDead, datesRecovered);\n\n    useEffect(() => {\n        let counter = -1;\n        const statsMapped = countries.map(country => {\n            counter++;\n            return <Stats\n                key={counter}\n                name={country[0]}\n                confirmed={country[1]}\n                dead={country[2]}\n                recovered={country[3]}\n                datesConfirmed={country[4]}\n                datesDead={Object.values(country[5])}\n                datesRecovered={Object.values(country[6])}\n            />\n        });\n\n        setStats(statsMapped);\n    }, [countries]);\n\n\n    const search = useRef(null);\n\n    function handleSearch() {\n\n    }\n\n    return (\n        <div>\n            <Container>\n                <div className='stats-control'>\n                    <Form.Label>Search countires:</Form.Label>\n                    <Form.Control ref={search} onChange={handleSearch} placeholder='Search countries...'/>\n                </div>\n            </Container>\n            { stats }\n        </div>\n    )\n}\n\nexport default Countries\n"]},"metadata":{},"sourceType":"module"}