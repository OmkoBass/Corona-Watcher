{"ast":null,"code":"var _jsxFileName = \"/home/omer/Git/Corona-Watcher/src/Components/CoronaNumbersChart.js\";\nimport React, { useState, useEffect } from 'react'; //axios\n\nimport axios from 'axios'; //Components\n\nimport Loader from \"./Loader\"; //Bootstrap\n\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\"; //Char.js\n\nimport { Line } from \"react-chartjs-2\";\n\nfunction CoronaNumbersChart() {\n  const [done, setDone] = useState(false);\n  const [sick, setSick] = useState(null);\n  const [dead, setDead] = useState(null);\n  const [recovered, setRecovered] = useState(null);\n  useEffect(() => {\n    axios.get('https://coronavirus-tracker-api.herokuapp.com/all').then(response => {\n      setDead(response.data.deaths.locations.map(country => country.latest));\n      setRecovered(response.data.recovered.locations.map(country => country.latest));\n      setDone(true);\n    });\n  }, []);\n  console.log(dead);\n  const sickData = {\n    labels: sick,\n    datasets: [{\n      label: 'Sick',\n      backgroundColor: '#cccccc',\n      //Lighter\n      borderColor: '#bfbfbf',\n      //Darker\n      data: sick\n    }]\n  };\n  const deadData = {\n    labels: dead,\n    datasets: [{\n      label: 'Dead',\n      backgroundColor: '#ff6666',\n      borderColor: '#ff4d4d',\n      data: dead\n    }]\n  };\n  const recoveredData = {\n    labels: recovered,\n    datasets: [{\n      label: 'Recovered',\n      backgroundColor: '#85e085',\n      borderColor: '#70db70',\n      data: recovered\n    }]\n  };\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, done ? React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"charts-main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Line, {\n    data: sickData,\n    options: {\n      responsive: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Line, {\n    data: deadData,\n    options: {\n      responsive: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Line, {\n    data: recoveredData,\n    options: {\n      responsive: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })))) : React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }));\n}\n\nexport default CoronaNumbersChart;","map":{"version":3,"sources":["/home/omer/Git/Corona-Watcher/src/Components/CoronaNumbersChart.js"],"names":["React","useState","useEffect","axios","Loader","Container","Card","Line","CoronaNumbersChart","done","setDone","sick","setSick","dead","setDead","recovered","setRecovered","get","then","response","data","deaths","locations","map","country","latest","console","log","sickData","labels","datasets","label","backgroundColor","borderColor","deadData","recoveredData","responsive"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\n//axios\nimport axios from 'axios'\n\n//Components\nimport Loader from \"./Loader\";\n\n//Bootstrap\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\n\n//Char.js\nimport { Line } from \"react-chartjs-2\";\n\nfunction CoronaNumbersChart() {\n    const [done, setDone] = useState(false);\n\n    const [sick, setSick] = useState(null)\n    const [dead, setDead] = useState(null)\n    const [recovered, setRecovered] = useState(null)\n\n    useEffect(() => {\n        axios.get('https://coronavirus-tracker-api.herokuapp.com/all')\n            .then(response => {\n                setDead(response.data.deaths.locations.map(country => country.latest));\n                setRecovered(response.data.recovered.locations.map(country => country.latest));\n\n                setDone(true);\n            })\n    }, []);\n\n    console.log(dead)\n\n    const sickData = {\n        labels: sick,\n        datasets: [\n            {\n                label: 'Sick',\n                backgroundColor: '#cccccc', //Lighter\n                borderColor: '#bfbfbf', //Darker\n                data: sick\n            }]\n    }\n\n    const deadData = {\n        labels: dead,\n        datasets: [\n            {\n                label: 'Dead',\n                backgroundColor: '#ff6666',\n                borderColor: '#ff4d4d',\n                data: dead\n            }]\n    }\n\n    const recoveredData = {\n        labels: recovered,\n        datasets: [{\n            label: 'Recovered',\n            backgroundColor: '#85e085',\n            borderColor: '#70db70',\n            data: recovered\n        }]\n    }\n\n    return (\n        <React.Fragment>\n            {done\n                ?\n                <Container>\n                    <div className='charts-main'>\n                        <Card>\n                            <Line data={sickData} options={{responsive: true}}/>\n                        </Card>\n                        <Card>\n                            <Line data={deadData} options={{responsive: true}}/>\n                        </Card>\n                        <Card>\n                            <Line data={recoveredData} options={{responsive: true}}/>\n                        </Card>\n                    </div>\n                </Container>\n                :\n                <Loader/>\n            }\n        </React.Fragment>\n    )\n}\n\nexport default CoronaNumbersChart\n"]},"metadata":{},"sourceType":"module"}