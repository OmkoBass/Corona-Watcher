{"version":3,"sources":["Components/Nav.js","Components/CoronaNumbers.js","Components/Info.js","Components/Loader.js","Components/MoreInfo.js","Components/Stats.js","Components/Countries.js","Components/Footer.js","Components/GraphedCases.js","App.js","index.js"],"names":["Nav","className","CoronaNumbers","props","mortality","deaths","cases","toFixed","date","Date","update","month","getMonth","day","getDate","hour","getHours","min","getMinutes","second","getSeconds","convertedDate","getFullYear","Jumbotron","Container","start","end","duration","recovered","Info","Loader","Spinner","animation","role","MoreInfo","useState","info","setInfo","done","setDone","a","NovelCovid","data","historical","country","province","useEffect","getCountry","then","responseData","labels","Object","keys","timeline","datasets","label","backgroundColor","borderColor","fill","values","options","responsive","Stats","basic","setBasic","handleInfo","Card","updated","stats","confirmed","goBack","onClick","Countries","setStats","allStats","setAllStats","counter","countries","search","useRef","Form","Label","Control","ref","onChange","searched","filter","stat","includes","current","value","placeholder","map","key","updatedAt","Footer","href","GraphedCases","maintainAspectRatio","App","globalData","setGlobalData","setCountries","globalHistory","setGlobalHistory","getGlobalData","all","getCountries","jhucsse","getGlobalHistory","setData","Fragment","ReactDOM","render","document","getElementById"],"mappings":"qNAWeA,MARf,WACI,OACI,yBAAKC,UAAU,sCACX,gD,gCC6EGC,MA1Ef,SAAuBC,GACnB,IAAMC,GAAaD,EAAME,OAASF,EAAMG,MAAQ,KAAKC,QAAQ,GAEvDC,EAAO,IAAIC,KAAKN,EAAMO,QAExBC,EAAQH,EAAKI,WAAa,EAC1BC,EAAML,EAAKM,UACXC,EAAOP,EAAKQ,WACZC,EAAMT,EAAKU,aACXC,EAASX,EAAKY,aAEdT,EAAQ,KACRA,EAAK,WAAOA,IACZE,EAAM,KACNA,EAAG,WAAOA,IACVE,EAAO,KACPA,EAAI,WAAOA,IACXE,EAAM,KACNA,EAAG,WAAOA,IACVE,EAAS,KACTA,EAAM,WAAOA,IAGjB,IAAME,EAAa,UAAMV,EAAN,YAAeE,EAAf,YAAsBL,EAAKc,cAA3B,eAA+CP,EAA/C,YAAuDE,EAAvD,YAA8DE,GAEjF,OACI,yBAAKlB,UAAU,eACX,yBAAKA,UAAU,sCACX,6CAAmBoB,IAEvB,yBAAKpB,UAAU,kBACX,kBAACsB,EAAA,EAAD,CAAWtB,UAAU,qBACjB,kBAACuB,EAAA,EAAD,KACI,gDACA,4BACI,kBAAC,IAAD,CACIC,MAAO,EACPC,IAAKvB,EAAMG,MACXqB,SAAU,OAI1B,kBAACJ,EAAA,EAAD,CAAWtB,UAAU,mBACjB,kBAACuB,EAAA,EAAD,KACI,6CACA,4BACI,kBAAC,IAAD,CACIC,MAAO,EACPC,IAAKvB,EAAME,OACXsB,SAAU,OAI1B,kBAACJ,EAAA,EAAD,CAAWtB,UAAU,wBACjB,kBAACuB,EAAA,EAAD,KACI,0CACA,4BACI,kBAAC,IAAD,CACIC,MAAO,EACPC,IAAKvB,EAAMyB,UACXD,SAAU,OAI1B,kBAACJ,EAAA,EAAD,CAAWtB,UAAU,gBACjB,kBAACuB,EAAA,EAAD,KACI,+CAAsBpB,EAAtB,UChDTyB,MAtBf,WACI,OACI,yBAAK5B,UAAU,SACX,wCACA,kBAACuB,EAAA,EAAD,KACI,wiBAOA,6KACA,gDAGA,gC,QCNDM,MAVf,WACI,OACI,yBAAK7B,UAAU,WACX,kBAAC8B,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,UAC7B,0BAAMhC,UAAU,WAAhB,iB,gBCyDDiC,MAvDf,SAAkB/B,GAAQ,IAAD,EACGgC,mBAAS,MADZ,mBACdC,EADc,KACRC,EADQ,OAEGF,oBAAS,GAFZ,mBAEdG,EAFc,KAERC,EAFQ,iDAIrB,4BAAAC,EAAA,sEACqB,IAAIC,aADzB,cACQC,EADR,yBAGWA,EAAKC,WAAW,KAAMxC,EAAMyC,QAASzC,EAAM0C,WAHtD,4CAJqB,sBA4CrB,OAlCAC,qBAAU,YAVW,2CAWjBC,GAAaC,MAAK,SAAAC,GACd,IAAMb,EAAO,CACTc,OAAQC,OAAOC,KAAKH,EAAaI,SAAS/C,OAC1CgD,SAAU,CACN,CACIC,MAAO,OACPC,gBAAiB,UACjBC,YAAa,UACbC,MAAM,EACNhB,KAAMS,OAAOQ,OAAOV,EAAaI,SAAS/C,QAE9C,CACIiD,MAAO,OACPC,gBAAiB,UACjBC,YAAa,UACbC,MAAM,EACNhB,KAAMS,OAAOQ,OAAOV,EAAaI,SAAShD,SAE9C,CACIkD,MAAO,YACPC,gBAAiB,UACjBC,YAAa,UACbC,MAAM,EACNhB,KAAMS,OAAOQ,OAAOV,EAAaI,SAASzB,cAKtDS,EAAQD,GACRG,GAAQ,SAKZ,6BACKD,EACG,kBAAC,IAAD,CAAMI,KAAMN,EAAMwB,QAAS,CAACC,YAAY,KAExC,kBAAC,EAAD,Q,QCVDC,MAzCf,SAAe3D,GAAQ,IAAD,EACQgC,oBAAS,GADjB,mBACX4B,EADW,KACJC,EADI,KAGlB,SAASC,IACLD,GAAUD,GAGd,OACI,yBAAK9D,UAAU,SACX,kBAACuB,EAAA,EAAD,KACI,kBAAC0C,EAAA,EAAD,KACI,6BACI,4BAAK/D,EAAMyC,SACX,4BAAKzC,EAAM0C,UACX,wBAAI5C,UAAU,sBAAd,iBAAkDE,EAAMgE,SACxD,4BAAKhE,EAAMiE,MAAMC,WACjB,wBAAIpE,UAAU,eAAeE,EAAMiE,MAAM/D,QACzC,wBAAIJ,UAAU,gBAAgBE,EAAMiE,MAAMxC,YAG1CmC,EAEI,KAEA,kBAAC,EAAD,CACInB,QAASzC,EAAMyC,QACfC,SAAU1C,EAAM0C,SAChBsB,QAAShE,EAAMgE,QACfG,OAAQL,IAGpB,yBAAKhE,UAAU,oBAAoBsE,QAASN,GACxC,2CAAiBF,EAAQ,OAAS,OAAlC,YAGR,gC,QCSDS,MA3Cf,SAAmBrE,GAAQ,IAAD,EACIgC,mBAAS,MADb,mBACfiC,EADe,KACRK,EADQ,OAEUtC,mBAAS,MAFnB,mBAEfuC,EAFe,KAELC,EAFK,KAIlBC,GAAW,EAEf9B,qBAAU,WACN2B,EAAStE,EAAM0E,WACfF,EAAYxE,EAAM0E,aACnB,IAEH,IAAIC,EAASC,iBAAO,MASpB,OACI,6BACI,kBAACvD,EAAA,EAAD,KACI,yBAAKvB,UAAU,iBACX,kBAAC+E,EAAA,EAAKC,MAAN,0BACA,kBAACD,EAAA,EAAKE,QAAN,CAAcC,IAAKL,EAAQM,SAZ3C,WACI,IAAMC,EAAWX,EAASY,QAAO,SAAAC,GAAI,OACrCA,EAAK3C,QAAQ4C,SAASV,EAAOW,QAAQC,UAErCjB,EAASY,IAQsDM,YAAY,0BAGtEvB,EAAQA,EAAMwB,KAAI,SAAAhD,GAAO,OACtB,kBAAC,EAAD,CACIiD,MAASjB,EACThC,QAAWA,EAAQA,QACnBC,SAAYD,EAAQC,SACpBuB,MAASxB,EAAQwB,MACjBD,QAAWvB,EAAQkD,eAI3B,OCrCGC,MATf,WACI,OACI,4BAAQ9F,UAAU,OACd,uBAAG+F,KAAK,qCAAR,qCACA,gDC2CGC,MAxCf,SAAsB9F,GAClB,IAAMuC,EAAO,CACTQ,OAAQC,OAAOC,KAAKjD,EAAMG,OAC1BgD,SAAU,CACF,CACIC,MAAO,YACPC,gBAAiB,UACjBC,YAAa,UACbC,MAAM,EACNhB,KAAMS,OAAOQ,OAAOxD,EAAMG,QAE9B,CACIiD,MAAO,OACPC,gBAAiB,UACjBC,YAAa,UACbC,MAAM,EACNhB,KAAMS,OAAOQ,OAAOxD,EAAME,SAE9B,CACIkD,MAAO,YACPC,gBAAiB,UACjBC,YAAa,UACbC,MAAM,EACNhB,KAAQS,OAAOQ,OAAOxD,EAAMyB,cAK5C,OAAO,6BACH,kBAACJ,EAAA,EAAD,CAAWvB,UAAU,eACjB,wBAAIA,UAAU,OAAd,yBACA,kBAAC,IAAD,CACIyC,KAAMA,EACNkB,QAAS,CAACC,YAAY,EAClBqC,qBAAqB,Q,cC8C1BC,MArEf,WAAgB,IAAD,EACyBhE,mBAAS,MADlC,mBACJiE,EADI,KACQC,EADR,OAEuBlE,mBAAS,MAFhC,mBAEJ0C,EAFI,KAEOyB,EAFP,OAG+BnE,mBAAS,MAHxC,mBAGJoE,EAHI,KAGWC,EAHX,OAIarE,oBAAS,GAJtB,mBAIJG,EAJI,KAIEC,EAJF,cAMIkE,IANJ,2EAMX,4BAAAjE,EAAA,sEACqB,IAAIC,aADzB,cACQC,EADR,yBAGWA,EAAKgE,OAHhB,4CANW,+BAYIC,IAZJ,2EAYX,4BAAAnE,EAAA,sEACqB,IAAIC,aADzB,cACQC,EADR,gBAGiBA,EAAKkE,UAHtB,oFAZW,+BAkBIC,IAlBJ,2EAkBX,4BAAArE,EAAA,sEACqB,IAAIC,aADzB,cACQC,EADR,yBAGWA,EAAKC,YAAW,IAH3B,4CAlBW,kEAwBX,sBAAAH,EAAA,sEACUiE,IAAgBzD,MAAK,SAAAN,GAAI,OAAI2D,EAAc3D,MADrD,uBAEUiE,IAAe3D,MAAK,SAAAN,GAAI,OAAI4D,EAAa5D,MAFnD,uBAGUmE,IAAmB7D,MAAK,SAAAN,GAAI,OAAI8D,EAAiB9D,MAH3D,4CAxBW,sBAoCX,OANAI,qBAAU,YA9BC,2CA+BPgE,GAAU9D,MAAK,WACXT,GAAQ,QAEb,IAGC,kBAAC,IAAMwE,SAAP,KACI,kBAAC,EAAD,MACCzE,EAEG,6BACI,kBAAC,EAAD,CACI5B,OAAQ0F,EAAWjC,QACnB7D,MAAO8F,EAAW9F,MAClBD,OAAQ+F,EAAW/F,OACnBuB,UAAWwE,EAAWxE,YAE1B,kBAAC,EAAD,CACItB,MAAOiG,EAAcjG,MACrBD,OAAQkG,EAAclG,OACtBuB,UAAW2E,EAAc3E,aAIjC,kBAAC,EAAD,MAEJ,kBAAC,EAAD,MACCU,EAEG,kBAAC,EAAD,CAAWuC,UAAWA,IAEtB,kBAAC,EAAD,MAEJ,kBAAC,EAAD,QChFZmC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.34cda176.chunk.js","sourcesContent":["import React from 'react'\n\n\nfunction Nav() {\n    return (\n        <nav className='text-center bg-dark text-white p-3'>\n            <h3>Corona Watcher</h3>\n        </nav>\n    )\n}\n\nexport default Nav;\n","import React from 'react'\n\n//Bootstrap\nimport Container from 'react-bootstrap/Container'\n\n//CountUp\nimport CountUp from 'react-countup';\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nfunction CoronaNumbers(props) {\n    const mortality = (props.deaths / props.cases * 100).toFixed(2);\n\n    const date = new Date(props.update);\n\n    let month = date.getMonth() + 1;\n    let day = date.getDate();\n    let hour = date.getHours();\n    let min = date.getMinutes();\n    let second = date.getSeconds();\n\n    if (month < 10)\n        month = `0${month}`;\n    if (day < 10)\n        day = `0${day}`;\n    if (hour < 10)\n        hour = `0${hour}`;\n    if (min < 10)\n        min = `0${min}`;\n    if (second < 10)\n        second = `0${second}`;\n\n\n    const convertedDate = `${month}:${day}:${date.getFullYear()} at ${hour}:${min}:${second}`;\n\n    return (\n        <div className='text-center'>\n            <div className='text-center bg-dark text-white p-3'>\n                <h4>Last updated: {convertedDate}</h4>\n            </div>\n            <div className='corona-numbers'>\n                <Jumbotron className='latest bg-warning'>\n                    <Container>\n                        <h3>Confirmed Cases:</h3>\n                        <h2>\n                            <CountUp\n                                start={0}\n                                end={props.cases}\n                                duration={5}/>\n                        </h2>\n                    </Container>\n                </Jumbotron>\n                <Jumbotron className='death bg-danger'>\n                    <Container>\n                        <h3>Total Deaths:</h3>\n                        <h2>\n                            <CountUp\n                                start={0}\n                                end={props.deaths}\n                                duration={5}/>\n                        </h2>\n                    </Container>\n                </Jumbotron>\n                <Jumbotron className='recovered bg-success'>\n                    <Container>\n                        <h3>Recovered:</h3>\n                        <h2>\n                            <CountUp\n                                start={0}\n                                end={props.recovered}\n                                duration={5}/>\n                        </h2>\n                    </Container>\n                </Jumbotron>\n                <Jumbotron className='bg-secondary'>\n                    <Container>\n                        <h3>Mortality rate: { mortality }%</h3>\n                    </Container>\n                </Jumbotron>\n            </div>\n        </div>\n    )\n}\n\nexport default CoronaNumbers\n","import React from 'react'\n\n//Bootstrap\nimport Container from 'react-bootstrap/Container'\n\nfunction Info() {\n    return (\n        <div className='covid'>\n            <h3>COVID-19</h3>\n            <Container>\n                <h5>\n                    Coronavirus disease 2019 (COVID-19) (also known as Wuhan Novel Coronavirus) is an infectious disease caused by severe acute respiratory\n                    syndrome coronavirus 2 (SARS-CoV-2), a virus closely related to the SARS virus. The disease first emerged in Wuhan,\n                    China and is the cause of the 2019â€“20 coronavirus outbreak. Those affected are likely to develop a fever and dry cough.\n                    Fatigue and shortness of breath are also common indicators. Sputum production, headache, muscle pain, and sore throat are\n                    less common symptoms.\n                </h5>\n                <p>(This information is pulled from covid-19 sources (link down below). I am not responsible if the info is not exactly right or it falls behind.</p>\n                <h3>\n                    Wash your hands!\n                </h3>\n                <hr/>\n            </Container>\n        </div>\n    )\n}\n\nexport default Info\n","import React from 'react'\n\n//Bootstrap\nimport Spinner from \"react-bootstrap/Spinner\";\n\nfunction Loader() {\n    return (\n        <div className='loading'>\n            <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n        </div>\n    )\n}\n\nexport default Loader\n","import React, {useEffect, useState} from 'react'\n\n//Components\nimport Loader from \"./Loader\";\n\n//MoreInfo.js\nimport {Line} from \"react-chartjs-2\";\n\n//API\nimport { NovelCovid } from \"novelcovid/dist\";\n\nfunction MoreInfo(props) {\n    const [info, setInfo] = useState(null);\n    const [done, setDone] = useState(false);\n\n    async function getCountry() {\n        let data = await new NovelCovid();\n\n        return data.historical(null, props.country, props.province);\n    }\n\n    useEffect(() => {\n        getCountry().then(responseData => {\n            const info = {\n                labels: Object.keys(responseData.timeline.cases),\n                datasets: [\n                    {\n                        label: 'Sick',\n                        backgroundColor: '#cccccc', //Lighter\n                        borderColor: '#bfbfbf', //Darker\n                        fill: false,\n                        data: Object.values(responseData.timeline.cases)\n                    },\n                    {\n                        label: 'Dead',\n                        backgroundColor: '#ff6666',\n                        borderColor: '#ff4d4d',\n                        fill: false,\n                        data: Object.values(responseData.timeline.deaths)\n                    },\n                    {\n                        label: 'Recovered',\n                        backgroundColor: '#85e085',\n                        borderColor: '#70db70',\n                        fill: false,\n                        data: Object.values(responseData.timeline.recovered)\n                    }\n                ]\n            };\n\n            setInfo(info);\n            setDone(true);\n        })\n    });\n\n    return (\n        <div>\n            {done ?\n                <Line data={info} options={{responsive: true}}/>\n                :\n                <Loader/>\n            }\n        </div>\n    )\n}\n\nexport default MoreInfo\n","import React, {useState} from 'react'\n\n//Components\nimport MoreInfo from \"./MoreInfo\";\n\n//Bootstrap\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\n\nfunction Stats(props) {\n    const [basic, setBasic] = useState(true);\n\n    function handleInfo() {\n        setBasic(!basic);\n    }\n\n    return (\n        <div className='stats'>\n            <Container>\n                <Card>\n                    <div>\n                        <h2>{props.country}</h2>\n                        <h4>{props.province}</h4>\n                        <h5 className='text-secondary m-3'>Last updated: {props.updated}</h5>\n                        <h5>{props.stats.confirmed}</h5>\n                        <h5 className='text-danger'>{props.stats.deaths}</h5>\n                        <h5 className='text-success'>{props.stats.recovered}</h5>\n                    </div>\n                    {\n                        basic\n                            ?\n                            null\n                            :\n                            <MoreInfo\n                                country={props.country}\n                                province={props.province}\n                                updated={props.updated}\n                                goBack={handleInfo}\n                            />\n                    }\n                    <div className='country-info mt-3' onClick={handleInfo}>\n                        <p>Click me for {basic ? 'more' : 'less'} info!</p>\n                    </div>\n                </Card>\n                <hr/>\n            </Container>\n        </div>\n    )\n}\n\nexport default Stats\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, {useEffect, useRef, useState} from 'react'\n\n//Components\nimport Stats from \"./Stats\";\n\n//Bootstrap\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\n\nfunction Countries(props) {\n    const [stats, setStats] = useState(null);\n    const [allStats, setAllStats] = useState(null);\n\n    let counter = -1;\n\n    useEffect(() => {\n        setStats(props.countries);\n        setAllStats(props.countries);\n    }, []);\n\n    let search = useRef(null);\n\n    function handleSearch() {\n        const searched = allStats.filter(stat =>\n        stat.country.includes(search.current.value));\n\n        setStats(searched);\n    }\n\n    return (\n        <div>\n            <Container>\n                <div className='stats-control'>\n                    <Form.Label>Search countries:</Form.Label>\n                    <Form.Control ref={search} onChange={handleSearch} placeholder='Search countries...'/>\n                </div>\n            </Container>\n            {stats ? stats.map(country => (\n                <Stats\n                    key = {++counter}\n                    country = {country.country}\n                    province = {country.province}\n                    stats = {country.stats}\n                    updated = {country.updatedAt}\n                />\n            ))\n            :\n            null}\n        </div>\n    )\n}\n\nexport default Countries\n","import React from 'react'\n\nfunction Footer() {\n    return (\n        <footer className='p-3'>\n            <a href='https://github.com/NovelCOVID/API'>https://github.com/NovelCOVID/API</a>\n            <p>OmkoBass Github</p>\n        </footer>\n    )\n}\n\nexport default Footer;\n","import React from 'react'\n\n//Bootstrap\nimport Container from \"react-bootstrap/Container\";\n\n//Graph.js\nimport { Line } from \"react-chartjs-2\";\n\n\nfunction GraphedCases(props) {\n    const data = {\n        labels: Object.keys(props.cases),\n        datasets: [\n                {\n                    label: 'Confirmed',\n                    backgroundColor: '#cccccc', //Lighter\n                    borderColor: '#bfbfbf', //Darker\n                    fill: false,\n                    data: Object.values(props.cases)\n                },\n                {\n                    label: 'Dead',\n                    backgroundColor: '#ff6666',\n                    borderColor: '#ff4d4d',\n                    fill: false,\n                    data: Object.values(props.deaths)\n                },\n                {\n                    label: 'Recovered',\n                    backgroundColor: '#85e085',\n                    borderColor: '#70db70',\n                    fill: false,\n                    data:   Object.values(props.recovered)\n                }\n            ]\n    }\n\n    return <div>\n        <Container className='text-center'>\n            <h3 className='p-3'>Global COVID-19 cases</h3>\n            <Line\n                data={data}\n                options={{responsive: true,\n                    maintainAspectRatio: true\n                }}/>\n        </Container>\n    </div>\n}\n\nexport default GraphedCases\n","import React, { useEffect, useState } from 'react';\n\n//Components\nimport Nav from \"./Components/Nav\";\nimport CoronaNumbers from \"./Components/CoronaNumbers\";\nimport Info from \"./Components/Info\";\nimport Countries from \"./Components/Countries\";\nimport Footer from \"./Components/Footer\";\nimport Loader from \"./Components/Loader\";\nimport GraphedCases from \"./Components/GraphedCases\";\n\n//css\nimport './Styles/style.css'\n\n//Bootstrap dependency\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//API\nimport { NovelCovid } from \"novelcovid/dist\";\n\nfunction App() {\n    const [globalData, setGlobalData] = useState(null);\n    const [countries, setCountries] = useState(null);\n    const [globalHistory, setGlobalHistory] = useState(null);\n    const [done, setDone] = useState(false);\n\n    async function getGlobalData() {\n        let data = await new NovelCovid();\n\n        return data.all();\n    }\n\n    async function getCountries() {\n        let data = await new NovelCovid();\n\n        return await data.jhucsse();\n    }\n\n    async function getGlobalHistory() {\n        let data = await new NovelCovid();\n\n        return data.historical(true);\n    }\n\n    async function setData() {\n        await getGlobalData().then(data => setGlobalData(data));\n        await getCountries().then(data => setCountries(data));\n        await getGlobalHistory().then(data => setGlobalHistory(data));\n    }\n\n    useEffect(() => {\n        setData().then(function() {\n            setDone(true);\n        })\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Nav/>\n            {done\n            ?\n                <div>\n                    <CoronaNumbers\n                        update={globalData.updated}\n                        cases={globalData.cases}\n                        deaths={globalData.deaths}\n                        recovered={globalData.recovered}\n                    />\n                    <GraphedCases\n                        cases={globalHistory.cases}\n                        deaths={globalHistory.deaths}\n                        recovered={globalHistory.recovered}\n                    />\n                </div>\n            :\n                <Loader/>\n            }\n            <Info/>\n            {done\n            ?\n                <Countries countries={countries} />\n            :\n                <Loader/>\n            }\n            <Footer/>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}