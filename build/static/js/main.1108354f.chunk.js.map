{"version":3,"sources":["Components/Nav.js","Components/CoronaNumbers.js","Components/Info.js","Components/Loader.js","Components/MoreInfo.js","Components/Stats.js","Components/Countries.js","Components/Footer.js","Components/GraphedCases.js","App.js","index.js"],"names":["Nav","className","CoronaNumbers","props","mortality","deaths","cases","toFixed","date","Date","update","convertedDate","getMonth","getDate","getFullYear","getHours","getMinutes","getSeconds","Jumbotron","Container","start","end","duration","recovered","Info","Loader","Spinner","animation","role","MoreInfo","useState","info","setInfo","done","setDone","useEffect","a","fetch","country","province","response","json","responseData","labels","Object","keys","timeline","datasets","label","backgroundColor","borderColor","fill","data","values","getCountry","then","options","responsive","Stats","basic","setBasic","handleInfo","Card","updated","stats","confirmed","goBack","onClick","Countries","setStats","allStats","setAllStats","counter","countries","search","useRef","Form","Label","Control","ref","onChange","searched","filter","stat","includes","current","value","placeholder","map","key","updatedAt","Footer","href","GraphedCases","maintainAspectRatio","App","globalData","setGlobalData","setCountries","globalHistory","setGlobalHistory","getGlobalData","NovelCovid","all","getCountries","jhucsse","getGlobalHistory","historical","setData","Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1108354f.chunk.js","sourcesContent":["import React from 'react'\n\n\nfunction Nav() {\n    return (\n        <nav className='text-center bg-dark text-white p-3'>\n            <h3>Corona Watcher</h3>\n        </nav>\n    )\n}\n\nexport default Nav;\n","import React from 'react'\n\n//Bootstrap\nimport Container from 'react-bootstrap/Container'\n\n//CountUp\nimport CountUp from 'react-countup';\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nfunction CoronaNumbers(props) {\n    const mortality = (props.deaths / props.cases * 100).toFixed(2);\n\n    const date = new Date(props.update);\n\n    const convertedDate = `${date.getMonth()+1}:${date.getDate()}:${date.getFullYear()} at ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\n\n    return (\n        <div className='text-center'>\n            <div className='text-center bg-dark text-white p-3'>\n                <h4>Last updated: {convertedDate}</h4>\n            </div>\n            <div className='corona-numbers'>\n                <Jumbotron className='latest bg-warning'>\n                    <Container>\n                        <h3>Confirmed Cases:</h3>\n                        <h2>\n                            <CountUp\n                                start={0}\n                                end={props.cases}\n                                duration={5}/>\n                        </h2>\n                    </Container>\n                </Jumbotron>\n                <Jumbotron className='death bg-danger'>\n                    <Container>\n                        <h3>Total Deaths:</h3>\n                        <h2>\n                            <CountUp\n                                start={0}\n                                end={props.deaths}\n                                duration={5}/>\n                        </h2>\n                    </Container>\n                </Jumbotron>\n                <Jumbotron className='recovered bg-success'>\n                    <Container>\n                        <h3>Recovered:</h3>\n                        <h2>\n                            <CountUp\n                                start={0}\n                                end={props.recovered}\n                                duration={5}/>\n                        </h2>\n                    </Container>\n                </Jumbotron>\n                <Jumbotron className='bg-secondary'>\n                    <Container>\n                        <h3>Mortality rate: { mortality }%</h3>\n                    </Container>\n                </Jumbotron>\n            </div>\n        </div>\n    )\n}\n\nexport default CoronaNumbers\n","import React from 'react'\n\n//Bootstrap\nimport Container from 'react-bootstrap/Container'\n\nfunction Info() {\n    return (\n        <div className='covid'>\n            <h3>COVID-19</h3>\n            <Container>\n                <h5>\n                    Coronavirus disease 2019 (COVID-19) (also known as Wuhan Novel Coronavirus) is an infectious disease caused by severe acute respiratory\n                    syndrome coronavirus 2 (SARS-CoV-2), a virus closely related to the SARS virus. The disease first emerged in Wuhan,\n                    China and is the cause of the 2019â€“20 coronavirus outbreak. Those affected are likely to develop a fever and dry cough.\n                    Fatigue and shortness of breath are also common indicators. Sputum production, headache, muscle pain, and sore throat are\n                    less common symptoms.\n                </h5>\n                <p>(This information is pulled from covid-19 sources (link down below). I am not responsible if the info is not exactly right or it falls behind.</p>\n                <h3>\n                    Wash your hands!\n                </h3>\n                <hr/>\n            </Container>\n        </div>\n    )\n}\n\nexport default Info\n","import React from 'react'\n\n//Bootstrap\nimport Spinner from \"react-bootstrap/Spinner\";\n\nfunction Loader() {\n    return (\n        <div className='loading'>\n            <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n        </div>\n    )\n}\n\nexport default Loader\n","import React, {useEffect, useState} from 'react'\n\n//Components\nimport Loader from \"./Loader\";\n\n//MoreInfo.js\nimport {Line} from \"react-chartjs-2\";\n\nfunction MoreInfo(props) {\n    const [info, setInfo] = useState(null);\n    const [done, setDone] = useState(false);\n\n    useEffect(() => {\n        const getCountry = async () => {\n            const response = await fetch(`https://corona.lmao.ninja/v2/historical/${props.country}/${props.province}`);\n            const responseData = await response.json();\n            const info = {\n                labels: Object.keys(responseData.timeline.cases),\n                datasets: [\n                    {\n                        label: 'Sick',\n                        backgroundColor: '#cccccc', //Lighter\n                        borderColor: '#bfbfbf', //Darker\n                        fill: false,\n                        data: Object.values(responseData.timeline.cases)\n                    },\n                    {\n                        label: 'Dead',\n                        backgroundColor: '#ff6666',\n                        borderColor: '#ff4d4d',\n                        fill: false,\n                        data: Object.values(responseData.timeline.deaths)\n                    },\n                    {\n                        label: 'Recovered',\n                        backgroundColor: '#85e085',\n                        borderColor: '#70db70',\n                        fill: false,\n                        data: Object.values(responseData.timeline.recovered)\n                    }\n                ]\n            };\n\n            setInfo(info);\n        };\n        getCountry().then(function () {\n            setDone(true);\n        });\n    });\n\n    return (\n        <div>\n            {done ?\n                <Line data={info} options={{responsive: true}}/>\n                :\n                <Loader/>\n            }\n        </div>\n    )\n}\n\nexport default MoreInfo\n","import React, {useState} from 'react'\n\n//Components\nimport MoreInfo from \"./MoreInfo\";\n\n//Bootstrap\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\n\nfunction Stats(props) {\n    const [basic, setBasic] = useState(true);\n\n    function handleInfo() {\n        setBasic(!basic);\n    }\n\n    return (\n        <div className='stats'>\n            <Container>\n                <Card>\n                    <div>\n                        <h2>{props.country}</h2>\n                        <h4>{props.province}</h4>\n                        <h5 className='text-secondary m-3'>Last updated: {props.updated}</h5>\n                        <h5>{props.stats.confirmed}</h5>\n                        <h5 className='text-danger'>{props.stats.deaths}</h5>\n                        <h5 className='text-success'>{props.stats.recovered}</h5>\n                    </div>\n                    {\n                        basic\n                            ?\n                            null\n                            :\n                            <MoreInfo\n                                country={props.country}\n                                province={props.province}\n                                updated={props.updated}\n                                goBack={handleInfo}\n                            />\n                    }\n                    <div className='country-info' onClick={handleInfo}>\n                        <p>Click me for {basic ? 'more' : 'less'} info!</p>\n                    </div>\n                </Card>\n                <hr/>\n            </Container>\n        </div>\n    )\n}\n\nexport default Stats\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, {useEffect, useRef, useState} from 'react'\n\n//Components\nimport Stats from \"./Stats\";\n\n//Bootstrap\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\n\nfunction Countries(props) {\n    const [stats, setStats] = useState(null);\n    const [allStats, setAllStats] = useState(null);\n\n    let counter = -1;\n\n    useEffect(() => {\n        setStats(props.countries);\n        setAllStats(props.countries);\n    }, []);\n\n    let search = useRef(null);\n\n    function handleSearch() {\n        const searched = allStats.filter(stat =>\n        stat.country.includes(search.current.value));\n\n        setStats(searched);\n    }\n\n    return (\n        <div>\n            <Container>\n                <div className='stats-control'>\n                    <Form.Label>Search countries:</Form.Label>\n                    <Form.Control ref={search} onChange={handleSearch} placeholder='Search countries...'/>\n                </div>\n            </Container>\n            {stats ? stats.map(country => (\n                <Stats\n                    key = {++counter}\n                    country = {country.country}\n                    province = {country.province}\n                    stats = {country.stats}\n                    updated = {country.updatedAt}\n                />\n            ))\n            :\n            null}\n        </div>\n    )\n}\n\nexport default Countries\n","import React from 'react'\n\nfunction Footer() {\n    return (\n        <footer className='p-3'>\n            <a href='https://github.com/NovelCOVID/API'>https://github.com/NovelCOVID/API</a>\n            <p>OmkoBass Github</p>\n        </footer>\n    )\n}\n\nexport default Footer;\n","import React from 'react'\n\n//Bootstrap\nimport Container from \"react-bootstrap/Container\";\n\n//Graph.js\nimport { Line } from \"react-chartjs-2\";\n\n\nfunction GraphedCases(props) {\n    const data = {\n        labels: Object.keys(props.cases),\n        datasets: [\n                {\n                    label: 'Confirmed',\n                    backgroundColor: '#cccccc', //Lighter\n                    borderColor: '#bfbfbf', //Darker\n                    fill: false,\n                    data: Object.values(props.cases)\n                },\n                {\n                    label: 'Dead',\n                    backgroundColor: '#ff6666',\n                    borderColor: '#ff4d4d',\n                    fill: false,\n                    data: Object.values(props.deaths)\n                },\n                {\n                    label: 'Recovered',\n                    backgroundColor: '#85e085',\n                    borderColor: '#70db70',\n                    fill: false,\n                    data:   Object.values(props.recovered)\n                }\n            ]\n    }\n\n    return <div>\n        <Container className='text-center'>\n            <h3 className='p-3'>Global COVID-19 cases</h3>\n            <Line\n                data={data}\n                options={{responsive: true,\n                    maintainAspectRatio: true\n                }}/>\n        </Container>\n    </div>\n}\n\nexport default GraphedCases\n","import React, { useEffect, useState } from 'react';\n\n//Components\nimport Nav from \"./Components/Nav\";\nimport CoronaNumbers from \"./Components/CoronaNumbers\";\nimport Info from \"./Components/Info\";\nimport Countries from \"./Components/Countries\";\nimport Footer from \"./Components/Footer\";\nimport Loader from \"./Components/Loader\";\n\n//css\nimport './Styles/style.css'\n\n//Bootstrap dependency\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//API\nimport { NovelCovid } from \"novelcovid/dist\";\nimport GraphedCases from \"./Components/GraphedCases\";\n\nfunction App() {\n    const [globalData, setGlobalData] = useState(null);\n    const [countries, setCountries] = useState(null);\n    const [globalHistory, setGlobalHistory] = useState(null);\n    const [done, setDone] = useState(false);\n\n    async function getGlobalData() {\n        let data = await new NovelCovid();\n\n        return data.all();\n    }\n\n    async function getCountries() {\n        let data = await new NovelCovid();\n\n        return await data.jhucsse();\n    }\n\n    async function getGlobalHistory() {\n        let data = await new NovelCovid();\n\n        return data.historical(true);\n    }\n\n    async function setData() {\n        await getGlobalData().then(data => setGlobalData(data));\n        await getCountries().then(data => setCountries(data));\n        await getGlobalHistory().then(data => setGlobalHistory(data));\n    }\n\n    useEffect(() => {\n        setData().then(function() {\n            setDone(true);\n        })\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Nav/>\n            {done\n            ?\n                <div>\n                    <CoronaNumbers\n                        update={globalData.updated}\n                        cases={globalData.cases}\n                        deaths={globalData.deaths}\n                        recovered={globalData.recovered}\n                    />\n                    <GraphedCases\n                        cases={globalHistory.cases}\n                        deaths={globalHistory.deaths}\n                        recovered={globalHistory.recovered}\n                    />\n                </div>\n            :\n                <Loader/>\n            }\n            <Info/>\n            {done\n            ?\n                <Countries countries={countries} />\n            :\n                <Loader/>\n            }\n            <Footer/>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}