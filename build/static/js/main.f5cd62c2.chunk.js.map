{"version":3,"sources":["Components/Nav.js","Components/CoronaNumbers.js","Components/Info.js","Components/Chart.js","Components/Stats.js","Components/Countries.js","Components/Footer.js","Components/Loader.js","App.js","index.js"],"names":["Nav","className","CoronaNumbers","props","mortality","latest","deaths","confirmed","toFixed","date","slice","time","Container","Jumbotron","start","end","duration","recovered","Info","Chart","dates","datesConfirmed","push","sort","a","b","data","labels","map","datasets","label","backgroundColor","borderColor","value","datesDead","datesRecovered","name","options","responsive","onClick","goBack","Stats","useState","basic","setBasic","handleInfo","Card","dead","Object","values","Countries","stats","setStats","allStats","setAllStats","countries","arr","arrs","val","i","reduce","zip","country","province","history","counter","statsMapped","key","useEffect","Promise","all","then","search","useRef","Form","Label","Control","ref","onChange","searched","filter","stat","includes","current","placeholder","Footer","Loader","Spinner","animation","role","App","pulled","setPulled","done","setDone","axios","get","response","Fragment","last_updated","locations","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5cd62c2.chunk.js","sourcesContent":["import React from 'react'\n\n\nfunction Nav() {\n    return (\n        <nav className='text-center bg-dark text-white'>\n            <h3>Corona Watcher</h3>\n        </nav>\n    )\n}\n\nexport default Nav;\n","import React from 'react'\n\n//Bootstrap\nimport Container from 'react-bootstrap/Container'\n\n//CountUp\nimport CountUp from 'react-countup';\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nfunction CoronaNumbers(props) {\n\n    const mortality = (props.latest.deaths / props.latest.confirmed * 100).toFixed(2);\n    const date = props.date.slice(0, 10);\n    const time = props.date.slice(11, 19);\n\n    return (\n        <div className='text-center'>\n            <div className='corona-date bg-dark text-white'>\n                <Container>\n                    <h3>This was last updated:</h3>\n                    <h3>{date} {time}</h3>\n                </Container>\n            </div>\n            <div className='corona-numbers'>\n                <Jumbotron className='latest bg-warning'>\n                    <Container>\n                        <h3>Confirmed Cases:</h3>\n                        <h2>\n                            <CountUp\n                                start={0}\n                                end={props.latest.confirmed}\n                                duration={5}/>\n                        </h2>\n                    </Container>\n                </Jumbotron>\n                <Jumbotron className='recovered bg-success'>\n                    <Container>\n                        <h3>Recovered:</h3>\n                        <h2>\n                            <CountUp\n                                start={0}\n                                end={props.latest.recovered}\n                                duration={5}/>\n                        </h2>\n                    </Container>\n                </Jumbotron>\n                <Jumbotron className='death bg-danger'>\n                    <Container>\n                        <h3>Total Deaths:</h3>\n                        <h2>\n                            <CountUp\n                                start={0}\n                                end={props.latest.deaths}\n                                duration={5}/>\n                        </h2>\n                    </Container>\n                </Jumbotron>\n                <Jumbotron className='bg-secondary'>\n                    <Container>\n                        <h3>Mortality rate: {mortality}%</h3>\n                    </Container>\n                </Jumbotron>\n            </div>\n        </div>\n    )\n}\n\nexport default CoronaNumbers\n","import React from 'react'\n\n//Bootstrap\nimport Container from 'react-bootstrap/Container'\n\nfunction Info() {\n    return (\n        <div className='covid'>\n            <h3>COVID-19</h3>\n            <Container>\n                <h5>\n                    Coronavirus disease 2019 (COVID-19) (also known as Wuhan Novel Coronavirus) is an infectious disease caused by severe acute respiratory\n                    syndrome coronavirus 2 (SARS-CoV-2), a virus closely related to the SARS virus. The disease first emerged in Wuhan,\n                    China and is the cause of the 2019â€“20 coronavirus outbreak. Those affected are likely to develop a fever and dry cough.\n                    Fatigue and shortness of breath are also common indicators. Sputum production, headache, muscle pain, and sore throat are\n                    less common symptoms.\n                </h5>\n                <p>(This information is pulled from covid-19 sources (link down below). I am not responsible if the info is not exactly right or it falls behind.</p>\n                <h3>\n                    Wash your hands!\n                </h3>\n                <hr/>\n            </Container>\n        </div>\n    )\n}\n\nexport default Info\n","import React from 'react'\n\n//Chart.js\nimport { Line } from \"react-chartjs-2\";\n\nfunction Chart(props) {\n    //Dates weren't sorted so i needed to sort the dates\n    //And preserve the value order for those dates\n    let dates = [];\n\n    for (let date in props.datesConfirmed) {\n        dates.push([date, props.datesConfirmed[date]]);\n    }\n    dates.sort(function(a, b) {\n        return a[1] - b[1];\n    })\n\n    const datesSorted = dates.map(date => date[0]);\n    const values = dates.map(value => value[1]);\n\n    const data = {\n        labels: datesSorted,\n        datasets: [\n                {\n                    label: 'Sick',\n                    backgroundColor: '#cccccc', //Lighter\n                    borderColor: '#bfbfbf', //Darker\n                    data: values\n                },\n                {\n                    label: 'Dead',\n                    backgroundColor: '#ff6666',\n                    borderColor: '#ff4d4d',\n                    data: props.datesDead,\n                },\n                {\n                    label: 'Recovered',\n                    backgroundColor: '#85e085',\n                    borderColor: '#70db70',\n                    data: props.datesRecovered,\n                }\n            ]\n    }\n\n    function handleBack() {\n        props.goBack();\n    }\n\n    return (\n        <div>\n            <h2>{props.name[0]}</h2>\n            <h4>{props.name[1]}</h4>\n            <Line data={data} options={{responsive: true}}/>\n            <div className='less-info' onClick={handleBack}>\n                <h4>Less info</h4>\n            </div>\n        </div>\n    )\n}\n\nexport default Chart\n","import React, { useState } from 'react'\n\n//Components\nimport Chart from \"./Chart\";\n\n//Bootstrap\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\n\nfunction Stats(props) {\n    const [basic, setBasic] = useState(true);\n\n    function handleInfo() {\n        setBasic(!basic);\n    }\n\n    return (\n        <div className='stats'>\n            <Container>\n                <Card>\n                    {\n                        basic\n                        ?\n                            <div>\n                                <h2>{props.name[0]}</h2>\n                                <h4>{props.name[1]}</h4>\n                                <h5>{props.confirmed}</h5>\n                                <h5 className='death text-danger'>{props.dead}</h5>\n                                <h5 className='recovered text-success'>{props.recovered}</h5>\n                                <div className='country-info' onClick={handleInfo}>\n                                    <p>Click me for more info!</p>\n                                </div>\n                            </div>\n                        :\n                        <Chart\n                            name={props.name}\n                            datesConfirmed={props.datesConfirmed}\n                            datesDead={Object.values(props.datesDead)}\n                            datesRecovered={Object.values(props.datesRecovered)}\n                            goBack={handleInfo}\n                        />\n                    }\n                </Card>\n                <hr/>\n            </Container>\n        </div>\n    )\n}\n\nexport default  Stats\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, {useEffect, useRef, useState} from 'react'\n\n//Components\nimport Stats from \"./Stats\";\n\n//Bootstrap\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\n\nfunction Countries(props) {\n    const [stats, setStats] = useState(null);\n    const [allStats, setAllStats] = useState(null);\n\n    const countryNames = props.confirmed.map(country => [country.country, country.province]);\n    const confirmed = props.confirmed.map(country => country.latest);\n    const dead = props.deaths.map(country => country.latest);\n    const recovered = props.recovered.map(country => country.latest);\n    const datesConfirmed = props.confirmed.map(country => country.history);\n    const datesDead = props.deaths.map(country => country.history);\n    const datesRecovered = props.recovered.map(country => country.history);\n\n    const zip = (arr, ...arrs) => {\n        return arr.map((val, i) => arrs.reduce((a, arr) => [...a, arr[i]], [val]));\n    }\n\n    const countries = zip(countryNames, confirmed, dead, recovered, datesConfirmed, datesDead, datesRecovered);\n\n    let counter = -1;\n\n    const statsMapped = countries.map(country => {\n        counter++;\n        return <Stats\n            key={counter}\n            name={country[0]}\n            confirmed={country[1]}\n            dead={country[2]}\n            recovered={country[3]}\n            datesConfirmed={country[4]}\n            datesDead={country[5]}\n            datesRecovered={country[6]}\n        />\n    });\n\n    useEffect(() => {\n        Promise.all(statsMapped).then(() => {\n            setStats(statsMapped);\n            setAllStats(statsMapped);\n        });\n    }, []);\n\n    let search = useRef(null);\n\n    function handleSearch() {\n        const searched = allStats.filter(stat =>\n        stat.props.name[0].includes(search.current.value));\n\n        setStats(searched);\n    }\n\n    return (\n        <div>\n            <Container>\n                <div className='stats-control'>\n                    <Form.Label>Search countires:</Form.Label>\n                    <Form.Control ref={search} onChange={handleSearch} placeholder='Search countries...'/>\n                </div>\n            </Container>\n            { stats }\n        </div>\n    )\n}\n\nexport default Countries\n","import React from 'react'\n\nfunction Footer() {\n    return (\n        <footer>\n            <p>https://github.com/ExpDev07/coronavirus-tracker-api</p>\n            <p>OmkoBass Github</p>\n        </footer>\n    )\n}\n\nexport default Footer;\n","import React from 'react'\n\n//Bootstrap\nimport Spinner from \"react-bootstrap/Spinner\";\n\nfunction Loader() {\n    return (\n        <div className='loading'>\n            <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n        </div>\n    )\n}\n\nexport default Loader\n","import React, { useEffect, useState } from 'react';\n\n//axios\nimport axios from 'axios';\n\n//Components\nimport Nav from \"./Components/Nav\";\nimport CoronaNumbers from \"./Components/CoronaNumbers\";\nimport Info from \"./Components/Info\";\nimport Countries from \"./Components/Countries\";\nimport Footer from \"./Components/Footer\";\nimport Loader from \"./Components/Loader\";\n\n//css\nimport './Styles/style.css'\n\n//Bootstrap dependency\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n    const [pulled, setPulled] = useState(null);\n    const [done, setDone] = useState(false);\n\n    useEffect(() => {\n        axios.get('https://coronavirus-tracker-api.herokuapp.com/all')\n            .then(response => {\n                setPulled(response);\n                setDone(true);\n            })\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Nav/>\n            {done\n            ?\n                <CoronaNumbers latest={pulled.data.latest} date={pulled.data.confirmed.last_updated}/>\n            :\n                <Loader/>\n            }\n            <Info/>\n            {done\n            ?\n                <Countries\n                    confirmed={pulled.data.confirmed.locations}\n                    deaths={pulled.data.deaths.locations}\n                    recovered={pulled.data.recovered.locations}\n                />\n            :\n                <Loader/>\n            }\n            <Footer/>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}